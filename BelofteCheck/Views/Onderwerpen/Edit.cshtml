@model BelofteCheck.ViewModels.OnderwerpenVM
@Html.HiddenFor(model => model.MessageSection.ErrorLevel, new { @class = "bc-msgtrigger", @onchange = "seterror(this)" })

<h2 class="bc-h">@Html.DisplayFor(model => model.MessageSection.Title)</h2>

<h3 class="bc-hm">@Html.DisplayFor(model => model.MessageSection.Message)</h3>

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div>

        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })

        <dl class="bc-dl">
            <dt class="bc-dt">
                @Html.LabelFor(model => model.onderwerp.OnderwerpID)
            </dt>
            <dd class="bc-dd">
                @Html.EditorFor(model => model.onderwerp.OnderwerpID, new { htmlAttributes = new { @readonly = "readonly" } })
                @Html.ValidationMessageFor(model => model.onderwerp.OnderwerpID, "", new { @class = "text-danger" })
            </dd>


            <dt class="bc-dt">
                @Html.LabelFor(model => model.onderwerp.Omschrijving)
            </dt>
            <dd class="bc-dd">
                @Html.EditorFor(model => model.onderwerp.Omschrijving, new { htmlAttributes = new { @rows = "3", @class = "bc-input" } })
                @Html.ValidationMessageFor(model => model.onderwerp.Omschrijving, "", new { @class = "text-danger" })
            </dd>
        </dl>
    </div>
    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            <input type="submit" value="Opslaan" class="bc-button" /> &nbsp;
            @Html.ActionLink("Naar Overzicht", "Index")
        </div>




        <p>&nbsp;</p>

        <h4 class="bc-h">Gerelateerde wetten</h4>
        <table class="bc-table">
            @if (Model.WettenLijst != null)
            {
                var i = 0;
                foreach (var item1 in Model.WettenLijst)
                {
                    if (i == 0)
                    {
                        <tr>
                            <th class="bc-16">
                                @Html.DisplayNameFor(Item1 => Item1.WettenLijst[i].WetID)
                            </th>
                            <th class="bc-40">
                                @Html.DisplayNameFor(Item1 => Item1.WettenLijst[i].WetNaam)
                            </th>
                            <th class="bc-40">
                                @Html.DisplayNameFor(Item1 => Item1.WettenLijst[i].Toelichting)
                            </th>
                        </tr>

                    }
                    <tr>

                        <td class="bc-16">
                            @Html.DisplayFor(Item1 => Item1.WettenLijst[i].WetID)

                        </td>
                        <td class="bc-40">
                            @Html.DisplayFor(Item1 => Item1.WettenLijst[i].WetNaam)

                        </td>
                        <td class="bc-40">
                            @Html.DisplayFor(Item1 => Item1.WettenLijst[i].Toelichting)
                        </td>
                    </tr>
                    i = i + 1;
                }
            }
        </table>
    </div>
}


@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
